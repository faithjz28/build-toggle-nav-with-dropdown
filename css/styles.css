body {
    background-color: #818cf8;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cg fill='%23f1f5f9' fill-opacity='0.26'%3E%3Cpath fill-rule='evenodd' d='M0 0h4v4H0V0zm4 4h4v4H4V4z'/%3E%3C/g%3E%3C/svg%3E");
    font-family: effra, sans-serif;
    font-weight: 300;
    font-style: normal;
}

.flex-container {
    display: flex;
    flex-flow: wrap;
    justify-content: space-between;
    align-items: center;
}

.inner-container {
    padding: 0 1rem;
}

/* ************* global typography ***********  */
h1 {
    font-size: 1.125rem;
    line-height: 3.75rem;
}

h2 {
    font-family: effra, sans-serif;
    font-weight: 700;
    font-style: normal;
}

/* **************** header ************** */
header {
    background-color: #f8fafc;
}

button {
    background-color: #f8fafc;
    border: none;
}

svg {
    width: 1.25rem;
}

header a {
    text-decoration: none;
    color: #475569;
    font-size: .875rem;
}

h1 a {
    color: #dc2626;
}

nav {
    position: absolute;
    background-color: #f8fafc;
    width: 98vw;
    top: 3.75rem;
    left: 0;
    /* once this changes to position absolute, it's no longer in the HTML, therefore it's no longer a flex item. */
    /* flex: 1 0 100%; */
    visibility: hidden;
    opacity: 0;
    overflow: hidden;
}

/* special class that will show the nav when the button is clicked (do not add to the html) */
.show-nav {
    visibility: visible;
    opacity: 1;
    overflow: visible;
}

.menu li {
    line-height: 3.125rem;
}

.menu a {
    display: flex;
    justify-content: space-between;
    padding: 0 0.5rem;
}

.menu a:hover {
    background-color: #e3e8f0;
}

.menu svg {
    width: 10px;
}

.submenu {
    visibility: hidden;
    opacity: 0;
    overflow: hidden;
    max-height: 0;
}

.submenu li {
    border-bottom: 1px solid #cbd5e1;
}

/* what do you hover over ? ----> first selector + :hover
what do you want to change? ---> second selector */

.menu li:hover > .submenu {
    visibility: visible;
    opacity: 1;
    overflow: visible;
    max-height: 14.0625rem;
}

/* this works to an extent, but the hover state has limitations. A better way to develop a dropdown nav is with javascript  */

@media screen and (min-width: 1100px) {
    .inner-container {
        padding: 0;
        width: 1000px;
        margin: 0 auto;
    }

    h2 {
        display: flex;
        justify-content: center;
        color: white;
    }

    .btn {
        display: none;
    }

    nav {
        position: static;
        visibility: visible;
        opacity: 1;
        overflow: visible;
        width: unset;
    }

    nav ul {
        display: flex;
        flex-direction: row;
        
    }

    nav li {
        margin-left: 1.875rem;
    }
    
    .submenu {
        display: flex;
        flex-direction: column;
        background-color: #cbd5e1;
        position: absolute;
        overflow: hidden;
    }

    /* .inner-container > a {
        order: 1;
    } */

    a:nth-child(3) {
        order: 1;
    }


    /* To do:
    1. layout the 3 top level links horizontally, side by side
    2. layout the submenu link (dropdown for wider screen)
    3. add focus or keyboard focus to the dropdown links */

}